// Generated by CoffeeScript 1.9.3

/*
Created by gota on 15-5-20.
 */

(function() {
  angular.module('security.Device', ['main']).controller('DeviceGroupListController', [
    '$scope', 'DeviceGroupService', function($scope, DeviceGroupService) {
      DeviceGroupService.list().success(function(data) {
        return $scope.groups = data;
      });
      $scope.updateData = function(uuid) {
        return DeviceGroupService.devices(uuid).success(function(data) {
          return $scope.devices = data;
        });
      };
      $scope.groupDevices = function(uuid) {
        if ($scope.checkedUuid !== void 0) {
          return;
        }
        return $scope.updateData(uuid);
      };
      return $scope.checkItem = function(uuid) {
        if ($scope.checkedUuid === uuid) {
          return $scope.checkedUuid = void 0;
        } else {
          $scope.checkedUuid = uuid;
          return $scope.updateData(uuid);
        }
      };
    }
  ]).controller('DeviceChartController', [
    '$scope', 'DeviceService', function($scope, DeviceService) {
      $scope.chartConfigs = [
        {
          options: {
            chart: {
              type: 'column'
            }
          },
          series: [
            {
              "id": "series-0",
              name: "终端数量"
            }
          ],
          title: {
            text: '终端型号统计'
          },
          size: {
            width: 280,
            height: 200
          },
          xAxis: {
            categories: []
          },
          yAxis: {
            allowDecimals: false,
            title: {
              text: ''
            }
          }
        }, {
          options: {
            chart: {
              type: 'pie'
            }
          },
          series: [
            {
              "id": "series-0",
              name: "终端数量"
            }
          ],
          title: {
            text: '设备状态统计'
          },
          size: {
            width: 280,
            height: 200
          }
        }
      ];
      DeviceService.countByStatus().success(function(data) {
        return $scope.chartConfigs[1].series[0].data = data;
      });
      return DeviceService.countByType().success(function(data) {
        $scope.chartConfigs[0].series[0].data = data[1];
        return $scope.chartConfigs[0].xAxis.categories = data[0];
      });
    }
  ]).controller('DeviceController', [
    '$scope', '$modal', '$timeout', '$filter', 'DTOptionsBuilder', 'DTColumnBuilder', 'MyDTColumnBuilder', 'DataTableService', 'DeviceService', 'AlertService', 'WebSocketService', function($scope, $modal, $timeout, $filter, DTOptionsBuilder, DTColumnBuilder, MyDTColumnBuilder, DataTableService, DeviceService, AlertService, WebSocketService) {
      var actionsHtml, dateHtml, enabledHtml, securityHtml, statusHtml;
      WebSocketService.clear();
      enabledHtml = function(data, type, full, meta) {
        return "<span>" + (data ? '有效' : '失效') + "</span>";
      };
      statusHtml = function(data, type, full, meta) {
        return "<span>{{ onlineStatus[\"" + data + "\"] }}</span>";
      };
      securityHtml = function(data, type, full, meta) {
        return "<span>" + (data === 'SAFE' ? '安全' : '不安全') + "</span>";
      };
      dateHtml = function(data, type, full, meta) {
        var date;
        date = $filter('date')(Date.parse(data), 'yyyy-MM-dd HH:mm:ss');
        return "<span>" + date + "</span>";
      };
      actionsHtml = function(data, type, full, meta) {
        var btns;
        btns = "<div class=\"btn-group\">\n    <a type=\"button\" class=\"btn btn-primary\" href='#/device/" + data + "/detail'>终端详情</a>\n    <a type=\"button\" class=\"btn btn-success\" href='#/device/" + data + "/bootInfo'>开机信息</a>\n\n    <div class=\"btn-group\" dropdown>\n      <button type=\"button\" class=\"btn btn-danger dropdown-toggle\" dropdown-toggle>\n        其他 <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a href=\"\" ng-click=\"unregister('" + data + "')\">撤销终端</a></li>\n        <li><a href=\"\" ng-click=\"recover('" + data + "')\">恢复终端</a></li>\n        <li><a href=\"\" ng-click=\"wipeData('" + data + "')\">擦除</a></li>\n        <li><a href=\"\" ng-click=\"reInit('" + data + "')\">初始化</a></li>\n      </ul>\n    </div>\n</div>";
        btns = btns.split('\n');
        btns.splice((full.enabled ? 10 : 9), 1);
        return btns.join('\n');
      };
      $scope.dtColumns = [MyDTColumnBuilder.newColumn('name', '终端名称'), MyDTColumnBuilder.newColumn('enabled', '有效').renderWith(enabledHtml), MyDTColumnBuilder.newColumn('DT_RowId', '连接状态').notSortable().renderWith(statusHtml), MyDTColumnBuilder.newColumn('info.securityStatus', '安全状态').renderWith(securityHtml), MyDTColumnBuilder.newColumn('info.modelNumber', '型号'), MyDTColumnBuilder.newColumn('info.firmwareVersion', '固件版本'), MyDTColumnBuilder.newColumn('timeCreated', '创建时间').renderWith(dateHtml), MyDTColumnBuilder.newColumn('DT_RowId', '操作').renderWith(actionsHtml).notSortable()];
      $scope.dtOptions = DataTableService.getDefaultOptions({
        url: 'dt/deviceClient',
        type: 'POST'
      }, $scope).withOption('order', [[6, "asc"]]);
      $scope.dtInstanceCallback = function(dtInstance) {
        var table;
        $scope.dtInstance = dtInstance;
        DataTableService.enableReload($scope, $scope.dtInstance);
        table = $scope.dtInstance.DataTable;
        return table.on('xhr.dt', function(e, settings, json) {
          var item, uuids;
          uuids = (function() {
            var i, len, ref, results;
            ref = json.data;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              results.push(item.uuid);
            }
            return results;
          })();
          return WebSocketService.subscribe('deviceConnection', {
            uuids: uuids
          }, function(data) {
            $scope.onlineStatus = JSON.parse(data.body);
            $scope.$apply();
            return table.columns.adjust();
          });
        });
      };
      $scope.unregister = function(id) {
        var promise;
        promise = DeviceService.unregister(id);
        return DataTableService.defaultHandle(promise, $scope.dtInstance, 'success', 'error');
      };
      $scope.recover = function(id) {
        var promise;
        promise = DeviceService.recover(id);
        return DataTableService.defaultHandle(promise, $scope.dtInstance, 'success', 'error');
      };
      $scope.wipeData = function(id) {
        var promise;
        if (confirm("确定擦除数据？")) {
          promise = DeviceService.wipeData(id);
          return AlertService.defaultHandle(promise, 'success', 'error');
        }
      };
      return $scope.reInit = function(id) {
        var promise;
        if (confirm('确定要恢复出厂设置?')) {
          promise = DeviceService.reInit(id);
          return AlertService.defaultHandle(promise, 'success', 'error');
        }
      };
    }
  ]).controller('DeviceRegisterController', [
    '$scope', '$location', 'DeviceService', 'AlertService', function($scope, $location, DeviceService, AlertService) {
      $scope.device = {};
      $scope.result = '';
      return $scope.register = function() {
        var promise;
        promise = DeviceService.register($scope.device);
        return AlertService.defaultHandle(promise, true);
      };
    }
  ]).controller('DeviceBootInfoController', [
    '$scope', '$routeParams', '$modal', 'DTOptionsBuilder', 'DTColumnBuilder', 'MyDTColumnBuilder', 'DataTableService', function($scope, $routeParams, $modal, DTOptionsBuilder, DTColumnBuilder, MyDTColumnBuilder, DataTableService) {
      $scope.dtInstance = {};
      $scope.dtOptions = DataTableService.getDefaultOptions({
        url: "dt/deviceClient/" + $routeParams.id + "/bootInfo",
        type: 'POST'
      }, $scope);
      return $scope.dtColumns = [MyDTColumnBuilder.newColumn('uuid', 'ID'), MyDTColumnBuilder.newColumn('bootTime', '启动时间'), MyDTColumnBuilder.newColumn('serverTime', '服务器时间')];
    }
  ]).controller('DeviceDetailController', [
    '$scope', '$routeParams', 'DTOptionsBuilder', 'DTColumnBuilder', 'MyDTColumnBuilder', 'DataTableService', 'DeviceService', 'WebSocketService',
    function($scope, $routeParams, DTOptionsBuilder, DTColumnBuilder, MyDTColumnBuilder, DataTableService, DeviceService, WebSocketService) {
      var actionsHtml;
      actionsHtml = function(data, type, full, meta) {
        return "<button class='del-btn' title='卸载应用' ng-click='uninstall(\"" + $routeParams.id + "\", \"" + data + "\")'><i class='fa fa-trash-o'></i></button>";
      };
      $scope.dtInstanceCallback = function(dtInstance) {
        $scope.dtInstance = dtInstance;
        return DataTableService.enableReload($scope, $scope.dtInstance);
      };
      $scope.dtOptions = DataTableService.getDefaultOptions({
        url: "dt/deviceClient/" + $routeParams.id + "/apps",
        type: 'POST'
      }, $scope);
      $scope.dtColumns = [MyDTColumnBuilder.newColumn('name', '应用名'), MyDTColumnBuilder.newColumn('packageName', '包名'), MyDTColumnBuilder.newColumn('versionName', '版本'), MyDTColumnBuilder.newColumn('timeCreated', '创建时间'), MyDTColumnBuilder.newColumn('status', '状态'), MyDTColumnBuilder.newColumn('DT_RowId', '操作').renderWith(actionsHtml).notSortable()];
      $scope.deviceTable = DataTableService.checkable('dtApps', $scope, $scope.dtOptions, $scope.dtColumns, $scope.dtInstance);
      $scope.uninstall = function(client, app) {
        var appIds, clientIds, promise;
        if (confirm('确定要卸载该应用')) {
          clientIds = [client];
          appIds = [app];
          promise = DeviceService.uninstall(clientIds, appIds);
          DataTableService.defaultHandle(promise, $scope.dtInstance, 'success', 'error');
          return promise.success(function() {
            return $location.path('/distribution/progress');
          });
        }
      };
      return DeviceService.detail($routeParams.id).success(function(data) {
        $scope.device = data;
        return WebSocketService.subscribe('deviceInfo', {
          clientId: $scope.device.clientId
        }, function(data) {
          var json;
          json = JSON.parse(data.body);
          $scope.info = json['system_info'];
          return $scope.$apply();
        });
      });
    }
  ]);

}).call(this);
